"use strict";

var vm = require("vm");
var acorn = require("acorn");


module.exports = function compileCode(codeString, args) {
  // Verify original code is valid syntax before wrapping it
  acorn.parse(codeString, { ecmaVersion: 2018 });

  var codeWithReturn = "return " + codeString.trim();
  var worksWithReturn = true;
  try {
    acorn.parse("(function() {" + codeWithReturn + "})", { ecmaVersion: 2018 });
  } catch (err) {
    worksWithReturn = false;
  }

  var wrapperParams = ["exports", "require", "module", "__filename", "__dirname"];

  if (args != null) {
    wrapperParams.push("args");
  }

  var wrappedCode = ["(function(" + wrapperParams.join(", ") + ") {", worksWithReturn ? codeWithReturn : codeString, "})"].join("\n");

  var codeFunction = vm.runInThisContext(wrappedCode);

  return function runCode(env) {
    if (args != null) {
      return codeFunction(env.exports, env.require, env.module, env.__filename, env.__dirname, args);
    } else {
      return codeFunction(env.exports, env.require, env.module, env.__filename, env.__dirname);
    }
  };
};