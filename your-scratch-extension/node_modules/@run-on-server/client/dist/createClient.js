"use strict";

var _defineProperty = require("babel-runtime/core-js/object/define-property");

var _defineProperty2 = _interopRequireDefault(_defineProperty);

var _typeof2 = require("babel-runtime/helpers/typeof");

var _typeof3 = _interopRequireDefault(_typeof2);

var _fetchJSON = require("./fetchJSON");

var _fetchJSON2 = _interopRequireDefault(_fetchJSON);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = function createClient(url) {
  function makeBody(code, args) {
    if (typeof code === "function") {
      return {
        functionString: code.toString(),
        args: args
      };
    } else if (typeof code === "string") {
      return {
        codeString: code,
        args: args
      };
    } else if ((typeof code === "undefined" ? "undefined" : (0, _typeof3.default)(code)) === "object" && code != null && typeof code.id === "string") {
      return {
        codeId: code.id,
        args: args
      };
    } else {
      throw new Error("Expected either a function, string, or code id, but received: " + (typeof code === "undefined" ? "undefined" : (0, _typeof3.default)(code)));
    }
  }

  function handleResponse(response) {
    if (response.success) {
      return response.result;
    } else {
      var error = new Error();
      for (var key in response.err) {
        if ({}.hasOwnProperty.call(response.err, key)) {
          (0, _defineProperty2.default)(error, key, {
            writable: true,
            enumerable: false,
            configurable: true,
            value: response.err[key]
          });
        }
      }

      throw error;
    }
  }

  function runOnServer(code, args) {
    var body = makeBody(code, args);
    return (0, _fetchJSON2.default)("POST", url, body).then(handleResponse);
  }

  runOnServer.sync = function sync(code, args) {
    var body = makeBody(code, args);
    var response = (0, _fetchJSON2.default)("POST", url, body, true);
    return handleResponse(response);
  };

  return runOnServer;
};