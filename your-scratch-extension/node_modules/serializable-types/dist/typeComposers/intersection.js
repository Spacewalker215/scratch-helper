"use strict";

var decorateTypeDef = require("../decorateTypeDef");

module.exports = function intersection() {
  for (var _len = arguments.length, typeDefs = new Array(_len), _key = 0; _key < _len; _key++) {
    typeDefs[_key] = arguments[_key];
  }

  return decorateTypeDef({
    description: typeDefs.map(function (typeDef) {
      return typeDef.description;
    }).join(" & "),
    serializedDescription: "{ $type: \"intersection\", $value: [ ".concat(typeDefs.map(function (typeDef) {
      return typeDef.serializedDescription;
    }).join(", "), " ] }"),
    check: function check(val) {
      return typeDefs.every(function (typeDef) {
        return typeDef.check(val);
      });
    },
    serialize: function serialize(val) {
      return {
        $type: "intersection",
        $value: typeDefs.map(function (typeDef) {
          return typeDef.serialize(val);
        })
      };
    },
    checkSerialized: function checkSerialized(serialized) {
      return serialized.$type === "intersection" && typeDefs.every(function (typeDef, index) {
        return typeDef.checkSerialized(serialized.$value[index]);
      });
    },
    deserialize: function deserialize(serialized) {
      var val;
      typeDefs.forEach(function (typeDef, index) {
        if (typeof val === "undefined") {
          val = typeDef.deserialize(serialized.$value[index]);
        } else {
          Object.assign(val, typeDef.deserialize(serialized.$value[index]));
        }
      });
      return val;
    }
  });
};