"use strict";

var assertType = require("../assertType");

var decorateTypeDef = require("../decorateTypeDef");

module.exports = function union() {
  for (var _len = arguments.length, typeDefs = new Array(_len), _key = 0; _key < _len; _key++) {
    typeDefs[_key] = arguments[_key];
  }

  return decorateTypeDef({
    description: typeDefs.map(function (typeDef) {
      return typeDef.description;
    }).join(" | "),
    serializedDescription: typeDefs.map(function (typeDef) {
      return typeDef.serializedDescription;
    }).join(" | "),
    check: function check(val) {
      return typeDefs.some(function (typeDef) {
        return typeDef.check(val);
      });
    },
    serialize: function serialize(val) {
      var defToSerializeWith = typeDefs.find(function (typeDef) {
        return typeDef.check(val);
      });

      if (defToSerializeWith == null) {
        throw assertType.makeError(this.description, val);
      }

      return defToSerializeWith.serialize(val);
    },
    checkSerialized: function checkSerialized(serialized) {
      return typeDefs.some(function (typeDef) {
        return typeDef.checkSerialized(serialized);
      });
    },
    deserialize: function deserialize(serialized) {
      var defToDeserializeWith = typeDefs.find(function (typeDef) {
        return typeDef.checkSerialized(serialized);
      });

      if (defToDeserializeWith == null) {
        throw assertType.makeError(this.serializedDescription, serialized);
      }

      return defToDeserializeWith.deserialize(serialized);
    }
  });
};